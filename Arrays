      1Q.     Write a function to add integer values of an array ?
      Ans.      public class Sum  {
                  public static void main(String[] args)  {
                     int [] arr = new int [] {1,2,3,4,5};
                     int sum = 0;   
                  for ( int i = 0; i < arr.length; i++)  {
                      sum = sum + arr[i];
                     }
                   System.out.println("Sum of an array is:",+sum);
                 }
               }
      2Q.       Write a function to calculate the average value of an array of integers ?
      Ans.                  public static void main(String[] args) {
                                int [] arr = {6,7,8,9,10};
                                int total = 0;
                                  for(int i=0; i<arr.length; i++)  {
                                   	total = total + arr[i];
                                  }
                                  float avg = total / arr.length;
                                System.out.println(" The Average is: %f",+avg);
                              }
                            }
       3Q.      Write a program to find the index of an array element ?
       Ans.                 public static void main(String[] args) {
		                     int[] numbers = {1,2,3,4,5}; 
		                       int element = 2;
		                       int index = -1;
		
		                        int i = 0;
		                    while(i < numbers.length) {
			                  if(numbers[i] == element) {
				                 index = i;
				                 break;
			                        }
			                       i++;
		                         }
		          		System.out.println("Index of "+element+" is : "+index);
	                           }
                                }      
      4Q.        Write a function to test if array contains a specific value ?
      Ans.                    public static boolean contains(int[] arr, int item) {
                                   for (int n : arr) {
                                      if (item == n) {
                                             return true;
                                                  }
                                               }
                                              return false;
                                             }
                          public static void main(String[] args) {
                                  int[] my_array1 = {45,55,65,75,85,95}; 
                               System.out.println(contains(my_array1, 75));
                               System.out.println(contains(my_array1, 90));
                                        }
                                    }
       5Q.        Write a function to remove a specific element from an array ?
       Ans.             public static void main(String[] args)   {
                              int[] arr = {1,2,3,4,5};
                              int index;
                             if ( arr == null) || index != 0 || index >= arr.length) {
                                 array.splice(index, 2);
                                }
                                System.out.println(" The new array is:",arr);
                               }
       6Q.        Write a function to copy an array to another array ?
       Ans.       public static void main(String[] args)  {
                        int[] arr1 = {1,3,5,7,9};
                        int[] arr2 = new int[arr1.length];
                        for ( int i=0; i<arr1.length; i++)  {
                                arr2[i] = arr1[i];
                               }
                               System.out.println(" Original Array:", +arr1);
                               System.out.println(" Copied array:", +arr2);
                               }
       7Q.        Write a function to insert an element at a specific position in the array ?
       Ans.                   public static void main(String[] args)  {
                                     int x[5],n,j;
                                    System.out.println(" Enter 5 elements to x\n");
                                    for ( i = 0; i < 5; i++)  {
                                    x[i] = Integer.parseInt(obj.readLine(System.in);
                                   }
                                  FOR INSERTION:
                                   System.out.print("Enter the element which you want to insert:");
                                                 j = Integer.parseInt(obj.readLine());
                                                 arr[5] = j;
                                               System.out.print("After inserting : ");
                                                 for(int i = 0; i <5; i++)   {
                                                            System.out.print(arr[i]+",");
                                                             }
                                                          System.out.print(arr[5]);
                                                           }
                                                         }
                                   FOR DELETION:
                                                 System.out.print("Enter the Element to Remove: ");
                                                   r = Integer.parseInt(obj.readLine());
                                                    for(i=0; i<size; i++)   {
                                                            if(r == arr[i])  {
                                                            for(j=i; j<(5-1); j++)
                                                                 arr[j] = arr[j+1];
                                                                   break;
                                                                }
                                                             }
                                                  System.out.println("\nThe new array is: ");
                                                  for(i=0; i<(5-1); i++)
                                                   System.out.print(arr[i]+ " ");
                                                       }
                                                     }
       8Q.        Write a function to find the minimum and maximum value of an array ?
       Ans.                   public class MinAndMax {
                                public int max(int [] array) {
                                        int max = 0;
                               for(int i=0; i<array.length; i++ ) {
                                  if(array[i]>max) {
                                  max = array[i];
                                     }
                                   }
                                   return max;
                                 }
                             public int min(int [] array) {
                                  int min = array[0];
                               for(int i=0; i<array.length; i++ ) {
                                if(array[i]<min) {
                                 min = array[i];
                                  }
                              }
                               return min;
                              }
                         public static void main(String args[]) {
                            int[] myArray = {23, 92, 56, 39, 93};
                           MinAndMax m = new MinAndMax();
                           System.out.println("Maximum value in the array is::"+m.max(myArray));
                           System.out.println("Minimum value in the array is::"+m.min(myArray));
                                }
                           }
       9Q.        Write a function to reverse an array of integer values ?
       Ans.                 public static void main(String[] args) {  
                                int [] arr = new int [] {1, 2, 3, 4, 5};  
                                 System.out.println("Original array: ");  
                                   for (int i = 0; i < arr.length; i++) {  
                                         System.out.print(arr[i] + " ");  
                                            }  
                                         System.out.println();  
                                System.out.println("Array in reverse order: ");  
                                 for (int i = arr.length-1; i >= 0; i--) {  
                                   System.out.print(arr[i] + " ");  
                                    }  
                                  }  
       10Q.       Write a function to find the duplicate values of an array ?
       Ans.                public static void main(String[] args)  {
                               int[] my_array = {1, 2, 5, 5, 6, 6, 7, 2};
                             for (int i = 0; i < my_array.length-1; i++)    {
                                        for (int j = i+1; j < my_array.length; j++)   {
                                           if ((my_array[i] == my_array[j]) && (i != j))   {
                                               System.out.println("Duplicate Element : "+my_array[j]);
                                                 }
                                             }
                                          }
                                      }    
       11Q.     Write a program to find the common values between two arrays ?
       Ans.                public static void main(String[] args)   {
                               int[] arr1 = new int[5];
                               int[] arr2 = new int[5];
                                 int i, j;
                     System.out.print("Enter 5 elements for the first and Second array: ");
                        for(i=0; i<5; i++)
                          arrOne[i] = s.nextInt();
                          arrTwo[i] = s.nextInt();       
                    System.out.println("\nCommon elements are:");
                          for(i=0; i<5; i++)  {
                                  for(j=0; j<5; j++)  {
                                    if(arrOne[i]==arrTwo[j])
                                         System.out.print(arrOne[i]+ " ");
                                                  }
                                               }
                                           }
       12Q.     Write a method to remove duplicate elements from an array ?
       Ans.             public class Duplicate_int {
                            public static void main(String[] args) {
                              int index=0;
                              int[] arr = {10,20,20,50,50,45};
                              int size = arr.length;
                              int duplicate,flag=0,count;
                              int[] anti_dup= new int[size];
                              int i,j;
                             System.out.println("Before removing duplicate from the array:");
                                 for(i=0;i<size;i++)  {
                                    System.out.println(arr[i]);
                                                  }
                                   for(i=0;i<size;i++)   {
                                               count=0;
                                   for(j=i+1;j<size;j++)  {
                                      if(arr[i]==arr[j]) {
                                          count=count+1;
                                          break;
                                             }
                                         } 
                                      if(count==0)  {
                                         anti_dup[index]=arr[i];
                                         index++;
                                              }
                                            }
                                      for(i=0;i<index;i++)  {
                                       arr[i]=anti_dup[i];
                                              }
                                 System.out.println("After removing duplicate from the array");
                                       for(i=0;i<index;i++) {
                                         System.out.println(arr[i]);
                                               }
                                             }
                                          } 
       13Q.	 Write a method to find the second largest number in an array ?
       Ans.		 public static void main(String []args)    {
		            int n;     
			   System.out.println("Enter the size of the array");
                           n=Integer.parseInt(obj.readLine());          
                           int arr[]=new int[n];   
                            System.out.println("Enter the array");  
                              for(int i=0;i<n;i++)   {
                                     arr[i]=sc.nextInt();
                                          }
                              for(int i=0;i<n;i++)   {
                                 for(int j=i+1;j<n;j++)  {
                                       if(arr[i]<arr[j])  {
                                          int temp=arr[i];
                                          arr[i]=arr[j];
                                          arr[j]=temp;
                                               }
                                            }
                                         }
                  System.out.println("Second Largest element is "+arr[1]);
                                    }
                                  }
 	14Q.	  Write a method to find number of even number and odd numbers in an array ?
	Ans.		  public static void main(String[] args)  {
                           int[] arr = {5, 7, 2, 4, 9, 13, 6};
	                System.out.println("Actual Array: "+Arrays.toString(arr)); 
	                   int ctr = 0;
                        	for(int i = 0; i < arr.length; i++)  {
	                        	  if(arr[i] % 2 == 0)
			                  ctr++;
	                                   }
	                System.out.println("Number of even numbers : "+ctr);
	                System.out.println("Number of odd numbers  : "+(arr.length-ctr));
                             }
                          }
 	 15Q.	  Write a function to get the difference of largest and smallest value ?
	 Ans.	     public static void main(String[] args)  {
                        int[] arr = {5, 7, 2, 4, 9, 13, 6};
	            System.out.println("Actual Array: "+Arrays.toString(arr)); 
	             int max_val = array_nums[0];
	             int min = array_nums[0];
	               for(int i = 1; i < arr.length; i++)  {
		                 if(arr[i] > max_val)
			             max_val = arr[i];
		               else if(arr[i] < min)
			             min = arr[i];
	                                  }
	                System.out.println("Difference between the largest and smallest value of the array: "+(max_val-min));	
                                     }
                                  }
     	 16Q.	  Write a method to verify if the array contains two specified elements(12,23) ?
	 Ans.	     public static void main(String[] args)  {
                          int[] arr = {9, 26, 18, 12, 5, 23, 16};
	          System.out.println("The Array: "+Arrays.toString(arr)); 
	                  int num1 = 12;
                          int num2 = 23;
        	System.out.println("Result: "+result(arr, num1, num2));
                             }	
                   public static boolean result(int[] arr, int num1, int num2) {
                        for (int number : arr) {
                          boolean r = number != num1 && number != num2;
                          if (r) {
                            return false;
                               }
                            }
                            return true;
                           }
 	 17Q.	  Write a program to remove the duplicate elements and return the new array ?
	 Ans.	    public static void main(String[] args) {
                    int arr[] = {20, 20, 30, 40, 50, 50, 50};  
		        System.out.println("Original array length: "+arr.length);
		        System.out.print("Array elements are: ");
                           for (int i = 0; i < arr.length; i++)  {
                               System.out.print(arr[i]+" ");
                                 }
			System.out.println("\n");
		        System.out.println("The new length of the array is: "+array_sort(arr));
		          }
                   public static int array_sort(int[] arr) {
                            int index = 1;
                            for (int i = 1; i < arr.length; i++) {
                               if (arr[i] != arr[index-1])
                                   arr[index++] = arr[i];
                                       }
	                      return index;
                                }
	  18Q.	   Write a function to find the missing number of sorted array of 1 to 100 ?
	  Ans.		  public static void main(String[] args) {
                           Scanner sc = new Scanner(System.in);
                            System.out.println("Enter the n value: ");
                            int n = sc.nextInt();
                            int inpuArray[] = new int[n];
                            System.out.println("Enter (n-1) numbers: ");
                             for(int i=0; i<=n-2; i++) {
                                inpuArray[i] = sc.nextInt();
                                      }
                          int sumOfAll = (n*(n+1))/2;
                          int sumOfArray = 0;
                          for(int i=0; i<=n-2; i++) {
                           sumOfArray = sumOfArray+inpuArray[i];
                                   }
                          int missingNumber = sumOfAll-sumOfArray;
                     System.out.println("Missing number is: "+missingNumber);
                            }
                         }
 	  
 
 
